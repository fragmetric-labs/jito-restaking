/**
 * This code was AUTOGENERATED using the kinobi library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun kinobi to update it.
 *
 * @see https://github.com/kinobi-so/kinobi
 */
import { fetchEncodedAccount, fetchEncodedAccounts, type Account, type Address, type Codec, type Decoder, type EncodedAccount, type Encoder, type FetchAccountConfig, type FetchAccountsConfig, type MaybeAccount, type MaybeEncodedAccount } from '@solana/web3.js';
import { type SlotToggle, type SlotToggleArgs } from '../types';
export type NcnVaultTicket = {
    discriminator: bigint;
    ncn: Address;
    vault: Address;
    index: bigint;
    state: SlotToggle;
    bump: number;
    reserved: Array<number>;
};
export type NcnVaultTicketArgs = {
    discriminator: number | bigint;
    ncn: Address;
    vault: Address;
    index: number | bigint;
    state: SlotToggleArgs;
    bump: number;
    reserved: Array<number>;
};
export declare function getNcnVaultTicketEncoder(): Encoder<NcnVaultTicketArgs>;
export declare function getNcnVaultTicketDecoder(): Decoder<NcnVaultTicket>;
export declare function getNcnVaultTicketCodec(): Codec<NcnVaultTicketArgs, NcnVaultTicket>;
export declare function decodeNcnVaultTicket<TAddress extends string = string>(encodedAccount: EncodedAccount<TAddress>): Account<NcnVaultTicket, TAddress>;
export declare function decodeNcnVaultTicket<TAddress extends string = string>(encodedAccount: MaybeEncodedAccount<TAddress>): MaybeAccount<NcnVaultTicket, TAddress>;
export declare function fetchNcnVaultTicket<TAddress extends string = string>(rpc: Parameters<typeof fetchEncodedAccount>[0], address: Address<TAddress>, config?: FetchAccountConfig): Promise<Account<NcnVaultTicket, TAddress>>;
export declare function fetchMaybeNcnVaultTicket<TAddress extends string = string>(rpc: Parameters<typeof fetchEncodedAccount>[0], address: Address<TAddress>, config?: FetchAccountConfig): Promise<MaybeAccount<NcnVaultTicket, TAddress>>;
export declare function fetchAllNcnVaultTicket(rpc: Parameters<typeof fetchEncodedAccounts>[0], addresses: Array<Address>, config?: FetchAccountsConfig): Promise<Account<NcnVaultTicket>[]>;
export declare function fetchAllMaybeNcnVaultTicket(rpc: Parameters<typeof fetchEncodedAccounts>[0], addresses: Array<Address>, config?: FetchAccountsConfig): Promise<MaybeAccount<NcnVaultTicket>[]>;
