"use strict";
/**
 * This code was AUTOGENERATED using the kinobi library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun kinobi to update it.
 *
 * @see https://github.com/kinobi-so/kinobi
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.JitoRestakingInstruction = exports.JitoRestakingAccount = exports.JITO_RESTAKING_PROGRAM_ADDRESS = void 0;
exports.identifyJitoRestakingInstruction = identifyJitoRestakingInstruction;
const web3_js_1 = require("@solana/web3.js");
exports.JITO_RESTAKING_PROGRAM_ADDRESS = 'RestkWeAVL8fRGgzhfeoqFhsqKRchg6aa1XrcH96z4Q';
var JitoRestakingAccount;
(function (JitoRestakingAccount) {
    JitoRestakingAccount[JitoRestakingAccount["Config"] = 0] = "Config";
    JitoRestakingAccount[JitoRestakingAccount["Ncn"] = 1] = "Ncn";
    JitoRestakingAccount[JitoRestakingAccount["NcnOperatorState"] = 2] = "NcnOperatorState";
    JitoRestakingAccount[JitoRestakingAccount["NcnVaultSlasherTicket"] = 3] = "NcnVaultSlasherTicket";
    JitoRestakingAccount[JitoRestakingAccount["NcnVaultTicket"] = 4] = "NcnVaultTicket";
    JitoRestakingAccount[JitoRestakingAccount["Operator"] = 5] = "Operator";
    JitoRestakingAccount[JitoRestakingAccount["OperatorVaultTicket"] = 6] = "OperatorVaultTicket";
})(JitoRestakingAccount || (exports.JitoRestakingAccount = JitoRestakingAccount = {}));
var JitoRestakingInstruction;
(function (JitoRestakingInstruction) {
    JitoRestakingInstruction[JitoRestakingInstruction["InitializeConfig"] = 0] = "InitializeConfig";
    JitoRestakingInstruction[JitoRestakingInstruction["InitializeNcn"] = 1] = "InitializeNcn";
    JitoRestakingInstruction[JitoRestakingInstruction["InitializeOperator"] = 2] = "InitializeOperator";
    JitoRestakingInstruction[JitoRestakingInstruction["InitializeNcnVaultSlasherTicket"] = 3] = "InitializeNcnVaultSlasherTicket";
    JitoRestakingInstruction[JitoRestakingInstruction["InitializeNcnVaultTicket"] = 4] = "InitializeNcnVaultTicket";
    JitoRestakingInstruction[JitoRestakingInstruction["InitializeOperatorVaultTicket"] = 5] = "InitializeOperatorVaultTicket";
    JitoRestakingInstruction[JitoRestakingInstruction["InitializeNcnOperatorState"] = 6] = "InitializeNcnOperatorState";
    JitoRestakingInstruction[JitoRestakingInstruction["WarmupNcnVaultTicket"] = 7] = "WarmupNcnVaultTicket";
    JitoRestakingInstruction[JitoRestakingInstruction["CooldownNcnVaultTicket"] = 8] = "CooldownNcnVaultTicket";
    JitoRestakingInstruction[JitoRestakingInstruction["NcnWarmupOperator"] = 9] = "NcnWarmupOperator";
    JitoRestakingInstruction[JitoRestakingInstruction["NcnCooldownOperator"] = 10] = "NcnCooldownOperator";
    JitoRestakingInstruction[JitoRestakingInstruction["OperatorWarmupNcn"] = 11] = "OperatorWarmupNcn";
    JitoRestakingInstruction[JitoRestakingInstruction["OperatorCooldownNcn"] = 12] = "OperatorCooldownNcn";
    JitoRestakingInstruction[JitoRestakingInstruction["WarmupNcnVaultSlasherTicket"] = 13] = "WarmupNcnVaultSlasherTicket";
    JitoRestakingInstruction[JitoRestakingInstruction["CooldownNcnVaultSlasherTicket"] = 14] = "CooldownNcnVaultSlasherTicket";
    JitoRestakingInstruction[JitoRestakingInstruction["WarmupOperatorVaultTicket"] = 15] = "WarmupOperatorVaultTicket";
    JitoRestakingInstruction[JitoRestakingInstruction["CooldownOperatorVaultTicket"] = 16] = "CooldownOperatorVaultTicket";
    JitoRestakingInstruction[JitoRestakingInstruction["NcnSetAdmin"] = 17] = "NcnSetAdmin";
    JitoRestakingInstruction[JitoRestakingInstruction["NcnSetSecondaryAdmin"] = 18] = "NcnSetSecondaryAdmin";
    JitoRestakingInstruction[JitoRestakingInstruction["OperatorSetAdmin"] = 19] = "OperatorSetAdmin";
    JitoRestakingInstruction[JitoRestakingInstruction["OperatorSetSecondaryAdmin"] = 20] = "OperatorSetSecondaryAdmin";
    JitoRestakingInstruction[JitoRestakingInstruction["OperatorSetFee"] = 21] = "OperatorSetFee";
    JitoRestakingInstruction[JitoRestakingInstruction["NcnDelegateTokenAccount"] = 22] = "NcnDelegateTokenAccount";
    JitoRestakingInstruction[JitoRestakingInstruction["OperatorDelegateTokenAccount"] = 23] = "OperatorDelegateTokenAccount";
    JitoRestakingInstruction[JitoRestakingInstruction["SetConfigAdmin"] = 24] = "SetConfigAdmin";
})(JitoRestakingInstruction || (exports.JitoRestakingInstruction = JitoRestakingInstruction = {}));
function identifyJitoRestakingInstruction(instruction) {
    const data = 'data' in instruction ? instruction.data : instruction;
    if ((0, web3_js_1.containsBytes)(data, (0, web3_js_1.getU8Encoder)().encode(0), 0)) {
        return JitoRestakingInstruction.InitializeConfig;
    }
    if ((0, web3_js_1.containsBytes)(data, (0, web3_js_1.getU8Encoder)().encode(1), 0)) {
        return JitoRestakingInstruction.InitializeNcn;
    }
    if ((0, web3_js_1.containsBytes)(data, (0, web3_js_1.getU8Encoder)().encode(2), 0)) {
        return JitoRestakingInstruction.InitializeOperator;
    }
    if ((0, web3_js_1.containsBytes)(data, (0, web3_js_1.getU8Encoder)().encode(3), 0)) {
        return JitoRestakingInstruction.InitializeNcnVaultSlasherTicket;
    }
    if ((0, web3_js_1.containsBytes)(data, (0, web3_js_1.getU8Encoder)().encode(4), 0)) {
        return JitoRestakingInstruction.InitializeNcnVaultTicket;
    }
    if ((0, web3_js_1.containsBytes)(data, (0, web3_js_1.getU8Encoder)().encode(5), 0)) {
        return JitoRestakingInstruction.InitializeOperatorVaultTicket;
    }
    if ((0, web3_js_1.containsBytes)(data, (0, web3_js_1.getU8Encoder)().encode(6), 0)) {
        return JitoRestakingInstruction.InitializeNcnOperatorState;
    }
    if ((0, web3_js_1.containsBytes)(data, (0, web3_js_1.getU8Encoder)().encode(7), 0)) {
        return JitoRestakingInstruction.WarmupNcnVaultTicket;
    }
    if ((0, web3_js_1.containsBytes)(data, (0, web3_js_1.getU8Encoder)().encode(8), 0)) {
        return JitoRestakingInstruction.CooldownNcnVaultTicket;
    }
    if ((0, web3_js_1.containsBytes)(data, (0, web3_js_1.getU8Encoder)().encode(9), 0)) {
        return JitoRestakingInstruction.NcnWarmupOperator;
    }
    if ((0, web3_js_1.containsBytes)(data, (0, web3_js_1.getU8Encoder)().encode(10), 0)) {
        return JitoRestakingInstruction.NcnCooldownOperator;
    }
    if ((0, web3_js_1.containsBytes)(data, (0, web3_js_1.getU8Encoder)().encode(11), 0)) {
        return JitoRestakingInstruction.OperatorWarmupNcn;
    }
    if ((0, web3_js_1.containsBytes)(data, (0, web3_js_1.getU8Encoder)().encode(12), 0)) {
        return JitoRestakingInstruction.OperatorCooldownNcn;
    }
    if ((0, web3_js_1.containsBytes)(data, (0, web3_js_1.getU8Encoder)().encode(13), 0)) {
        return JitoRestakingInstruction.WarmupNcnVaultSlasherTicket;
    }
    if ((0, web3_js_1.containsBytes)(data, (0, web3_js_1.getU8Encoder)().encode(14), 0)) {
        return JitoRestakingInstruction.CooldownNcnVaultSlasherTicket;
    }
    if ((0, web3_js_1.containsBytes)(data, (0, web3_js_1.getU8Encoder)().encode(15), 0)) {
        return JitoRestakingInstruction.WarmupOperatorVaultTicket;
    }
    if ((0, web3_js_1.containsBytes)(data, (0, web3_js_1.getU8Encoder)().encode(16), 0)) {
        return JitoRestakingInstruction.CooldownOperatorVaultTicket;
    }
    if ((0, web3_js_1.containsBytes)(data, (0, web3_js_1.getU8Encoder)().encode(17), 0)) {
        return JitoRestakingInstruction.NcnSetAdmin;
    }
    if ((0, web3_js_1.containsBytes)(data, (0, web3_js_1.getU8Encoder)().encode(18), 0)) {
        return JitoRestakingInstruction.NcnSetSecondaryAdmin;
    }
    if ((0, web3_js_1.containsBytes)(data, (0, web3_js_1.getU8Encoder)().encode(19), 0)) {
        return JitoRestakingInstruction.OperatorSetAdmin;
    }
    if ((0, web3_js_1.containsBytes)(data, (0, web3_js_1.getU8Encoder)().encode(20), 0)) {
        return JitoRestakingInstruction.OperatorSetSecondaryAdmin;
    }
    if ((0, web3_js_1.containsBytes)(data, (0, web3_js_1.getU8Encoder)().encode(21), 0)) {
        return JitoRestakingInstruction.OperatorSetFee;
    }
    if ((0, web3_js_1.containsBytes)(data, (0, web3_js_1.getU8Encoder)().encode(22), 0)) {
        return JitoRestakingInstruction.NcnDelegateTokenAccount;
    }
    if ((0, web3_js_1.containsBytes)(data, (0, web3_js_1.getU8Encoder)().encode(23), 0)) {
        return JitoRestakingInstruction.OperatorDelegateTokenAccount;
    }
    if ((0, web3_js_1.containsBytes)(data, (0, web3_js_1.getU8Encoder)().encode(24), 0)) {
        return JitoRestakingInstruction.SetConfigAdmin;
    }
    throw new Error('The provided instruction could not be identified as a jitoRestaking instruction.');
}
