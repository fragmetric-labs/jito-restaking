/**
 * This code was AUTOGENERATED using the kinobi library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun kinobi to update it.
 *
 * @see https://github.com/kinobi-so/kinobi
 */
import { type Address, type Codec, type Decoder, type Encoder, type IAccountMeta, type IAccountSignerMeta, type IInstruction, type IInstructionWithAccounts, type IInstructionWithData, type ReadonlyAccount, type ReadonlySignerAccount, type TransactionSigner, type WritableAccount } from '@solana/web3.js';
import { JITO_RESTAKING_PROGRAM_ADDRESS } from '../programs';
export declare const COOLDOWN_NCN_VAULT_TICKET_DISCRIMINATOR = 8;
export declare function getCooldownNcnVaultTicketDiscriminatorBytes(): import("@solana/web3.js").ReadonlyUint8Array;
export type CooldownNcnVaultTicketInstruction<TProgram extends string = typeof JITO_RESTAKING_PROGRAM_ADDRESS, TAccountConfig extends string | IAccountMeta<string> = string, TAccountNcn extends string | IAccountMeta<string> = string, TAccountVault extends string | IAccountMeta<string> = string, TAccountNcnVaultTicket extends string | IAccountMeta<string> = string, TAccountAdmin extends string | IAccountMeta<string> = string, TRemainingAccounts extends readonly IAccountMeta<string>[] = []> = IInstruction<TProgram> & IInstructionWithData<Uint8Array> & IInstructionWithAccounts<[
    TAccountConfig extends string ? ReadonlyAccount<TAccountConfig> : TAccountConfig,
    TAccountNcn extends string ? ReadonlyAccount<TAccountNcn> : TAccountNcn,
    TAccountVault extends string ? ReadonlyAccount<TAccountVault> : TAccountVault,
    TAccountNcnVaultTicket extends string ? WritableAccount<TAccountNcnVaultTicket> : TAccountNcnVaultTicket,
    TAccountAdmin extends string ? ReadonlySignerAccount<TAccountAdmin> & IAccountSignerMeta<TAccountAdmin> : TAccountAdmin,
    ...TRemainingAccounts
]>;
export type CooldownNcnVaultTicketInstructionData = {
    discriminator: number;
};
export type CooldownNcnVaultTicketInstructionDataArgs = {};
export declare function getCooldownNcnVaultTicketInstructionDataEncoder(): Encoder<CooldownNcnVaultTicketInstructionDataArgs>;
export declare function getCooldownNcnVaultTicketInstructionDataDecoder(): Decoder<CooldownNcnVaultTicketInstructionData>;
export declare function getCooldownNcnVaultTicketInstructionDataCodec(): Codec<CooldownNcnVaultTicketInstructionDataArgs, CooldownNcnVaultTicketInstructionData>;
export type CooldownNcnVaultTicketInput<TAccountConfig extends string = string, TAccountNcn extends string = string, TAccountVault extends string = string, TAccountNcnVaultTicket extends string = string, TAccountAdmin extends string = string> = {
    config: Address<TAccountConfig>;
    ncn: Address<TAccountNcn>;
    vault: Address<TAccountVault>;
    ncnVaultTicket: Address<TAccountNcnVaultTicket>;
    admin: TransactionSigner<TAccountAdmin>;
};
export declare function getCooldownNcnVaultTicketInstruction<TAccountConfig extends string, TAccountNcn extends string, TAccountVault extends string, TAccountNcnVaultTicket extends string, TAccountAdmin extends string>(input: CooldownNcnVaultTicketInput<TAccountConfig, TAccountNcn, TAccountVault, TAccountNcnVaultTicket, TAccountAdmin>): CooldownNcnVaultTicketInstruction<typeof JITO_RESTAKING_PROGRAM_ADDRESS, TAccountConfig, TAccountNcn, TAccountVault, TAccountNcnVaultTicket, TAccountAdmin>;
export type ParsedCooldownNcnVaultTicketInstruction<TProgram extends string = typeof JITO_RESTAKING_PROGRAM_ADDRESS, TAccountMetas extends readonly IAccountMeta[] = readonly IAccountMeta[]> = {
    programAddress: Address<TProgram>;
    accounts: {
        config: TAccountMetas[0];
        ncn: TAccountMetas[1];
        vault: TAccountMetas[2];
        ncnVaultTicket: TAccountMetas[3];
        admin: TAccountMetas[4];
    };
    data: CooldownNcnVaultTicketInstructionData;
};
export declare function parseCooldownNcnVaultTicketInstruction<TProgram extends string, TAccountMetas extends readonly IAccountMeta[]>(instruction: IInstruction<TProgram> & IInstructionWithAccounts<TAccountMetas> & IInstructionWithData<Uint8Array>): ParsedCooldownNcnVaultTicketInstruction<TProgram, TAccountMetas>;
